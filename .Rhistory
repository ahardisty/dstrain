geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_color_discrete (labels = "fav")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_color_discrete (label = "fav")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_fill_discrete(label = "fav")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_fill_discrete(labels = "fav")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_fill_discrete(name = "fav")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city))) +
scale_fill_discrete(name = "interaction of hometown and favorite town")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city, bins = 1)))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city), bins = 1))
?geom_histogram
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(bins = 1, value, fill = interaction(hometown,favorite_us_city)))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(binwidth = 1, value, fill = interaction(hometown,favorite_us_city)))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city)), binwidth = 1)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city)), binwidth = 2)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city)), binwidth = .5)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value, fill = interaction(hometown,favorite_us_city)), binwidth = .5) +
scale_fill_discrete(name = "interaction of hometown and favorite town") +
scale_x_continuous()
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value)), binwidth = 1)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value), binwidth = 1)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value), binwidth = .5)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value), binwidth = .5) +
ggtitle(label = "distribution of r skills")
ds_skill_level
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(value))
ds_skill_level <- results_tidy %>%
filter(variable == "ds_skill_level") %>%
mutate(value = ifelse(is.na(value), 1,value) %>% as.numeric()) %>%
mutate(type = employee)
ds_skill_level <- results_tidy %>%
filter(variable == "ds_skill_level") %>%
mutate(value = ifelse(is.na(value), 1,value) %>% as.numeric()) %>%
mutate(type = 'employee')
ds_skill_level
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = employee))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type, y = value))
seq(1:6, by = 1)
seq(1:6, by = 1)
seq(1,6, by = 1)
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = 1))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = .5))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value), binwidth = .5) +
scale_x_continuous(breaks = seq(1,6, by = .5))+
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_histogram(aes(value), binwidth = 1) +
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value))
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value))+
scale_x_continuous(breaks = seq(1,6, by = 1))
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value), binwidth = 1)+
scale_x_continuous(breaks = seq(1,6, by = 1))
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value))+
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value), stat = 'identity')+
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
geom_freqpoly(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
geom_bar(aes(value), stat = 'count')+
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_density(aes(value))
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_density(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
# geom_bar(aes(value), stat = 'count')+
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = .5))
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_boxplot(aes(x = type, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills")
# boxplot with colors
head(ds_skill_level)
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk
, hometown, favorite_us_city, favorite_non_us_city))
results_tidy
head(results_tidy)
head(results)
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk
, hometown, favorite_us_city, favorite_non-us_city))
head(results_tidy)
results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non-us_city) %>%
head()
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, `favorite_non-us_city`) %>%
head()
new_names_2 <-results %>%
colnames() %>%
stringr::str_replace_all(pattern = "Please rate this food: ", replacement = "") %>%
stringr::str_replace_all(pattern = "What is the name of your", replacement = "") %>%
stringr::str_replace_all(pattern = "What is your", replacement = "") %>%
stringr::str_replace_all(pattern = "\\?", replacement = "") %>%
stringr::str_trim() %>%
stringr::str_replace_all(pattern = " ", replacement = "_") %>%
stringr::str_replace_all(pattern = "-", replacement = "_") %>%
stringr::str_to_lower()
results <- read.csv('data/survey_results.csv', check.names = FALSE, blank.lines.skip = TRUE, strip.white = TRUE, stringsAsFactors = FALSE)
new_names_2 <-results %>%
colnames() %>%
stringr::str_replace_all(pattern = "Please rate this food: ", replacement = "") %>%
stringr::str_replace_all(pattern = "What is the name of your", replacement = "") %>%
stringr::str_replace_all(pattern = "What is your", replacement = "") %>%
stringr::str_replace_all(pattern = "\\?", replacement = "") %>%
stringr::str_trim() %>%
stringr::str_replace_all(pattern = " ", replacement = "_") %>%
stringr::str_replace_all(pattern = "-", replacement = "_") %>%
stringr::str_to_lower()
new_names_2
new_names_2[5] <- "r_skill"
new_names_2[6] <- "ds_skill"
new_names_2[7] <- "ds_topics"
new_names_2[8] <- "models"
new_names_2[9] <- "packages"
new_names_2[12] <- "star_rank"
new_names_2[25] <- "gender"
# assign column names to data frame
names(results) <- new_names_2
results <- results %>%
mutate(num_models = stringr::str_count(models, pattern = ";")  +1 ,
num_packages = stringr::str_count(packages, pattern = ";") + 1,
num_skills = stringr::str_count(ds_skill, pattern = ";") + 1,
num_topics = stringr::str_count(ds_topics, pattern = ";") + 1 ,
ds_skill_desc = stringr::str_extract_all(ds_skill, "(\\D.*)") %>% str_trim(),
r_skill_desc = stringr::str_extract_all(r_skill, "(\\D).*") %>% str_trim(),
ds_skill_level = stringr::str_extract_all(ds_skill, "(\\d)") %>% as.numeric(),
r_skill_level = stringr::str_extract_all(r_skill, "(\\d)") %>% as.numeric())
results  <-  results %>%
mutate(num_ds_skill = stringr::str_count(ds_skill_desc, pattern = ";") + 1,
num_r_skill = stringr::str_count(r_skill_desc, pattern = ";") + 1)
results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city) %>%
head()
results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city)) %>%
head()
results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city))
results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city)) %>%
head()
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city)) %>%
head()
ds_skill_level <- results_tidy %>%
filter(variable == "ds_skill_level") %>%
mutate(value = ifelse(is.na(value), 1,value) %>% as.numeric()) %>%
mutate(type = 'employee')
ds_skill_level
results_tidy
ds_skill_level <- results_tidy %>%
filter(variable == "ds_skill_level")
ds_skill_level
results_tidy
summary(as.factor(results_tidy$variable))
results_tidy
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city))
summary(as.factor(results_tidy$variable))
ds_skill_level <- results_tidy %>%
filter(variable == "ds_skill_level") %>%
mutate(value = ifelse(is.na(value), 1,value) %>% as.numeric()) %>%
mutate(type = 'employee')
ds_skill_level
ggplot(ds_skill_level)+
# geom_freqpoly(aes(value))+
geom_density(aes(value))+
# geom_histogram(aes(value), binwidth = 1) +
# geom_bar(aes(value), stat = 'count')+
scale_x_continuous(breaks = seq(1,6, by = 1)) +
ggtitle(label = "distribution of r skills")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "hometown")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = hometown, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5))
ggplot(ds_skill_level) +
geom_boxplot(aes(x = hometown, y = value, fill = hometown)) +
scale_y_continuous(breaks = seq(1,6, by = .5))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = hometown))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = hometown), stat = 'identity')
ds_skill_level
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = favorite_us_city), stat = 'identity')
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interactio(favorite_us_city, favorite_non_us_city), stat = 'identity')
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interactio(favorite_us_city, favorite_non_us_city), stat = 'identity'))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interactio(favorite_us_city, favorite_non_us_city), stat = 'identity'))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interaction(favorite_us_city, favorite_non_us_city), stat = 'identity'))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interaction(favorite_us_city, favorite_non_us_city), stat = 'identity'))
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interaction(favorite_us_city, favorite_non_us_city)), stat = 'identity')
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interaction(favorite_us_city, favorite_non_us_city)), stat = 'identity') +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "interactino of favorite/nus and non us city")
ggplot(ds_skill_level) +
geom_bar(aes(x = hometown, y = value, fill = interaction(favorite_us_city, favorite_non_us_city)), stat = 'identity') +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "interactino of favorite\nus and non us city")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "hometown")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "favoritye us city")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "favorite us city")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value)) +
scale_y_continuous(breaks = seq(1,6, by = .5))
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value, fill = hometown))
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value, fill = type))
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value, fill = type)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "response type")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value, fill = type)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of r skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "response type") +
labs(x = "favorite us city")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = favorite_us_city, y = value, fill = type)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of ds skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "response type") +
labs(x = "favorite us city", y = "ds_skill")
ggplot(ds_skill_level) +
geom_boxplot(aes(x = type, y = value, fill = favorite_us_city)) +
scale_y_continuous(breaks = seq(1,6, by = .5)) +
ggtitle(label = "distribution of ds skills using a boxplot - favorite us city") +
scale_fill_discrete(name = "favorite us city") +
labs(x = "response type", y = "Data Science Skill Level")
# What about food  -------------------------------------------------
colnames(results)
# What about food  -------------------------------------------------
colnames(tidy_results)
# What about food  -------------------------------------------------
colnames(results_tidy)
summary(results_tidy$variable)
summary(as.factor(results_tidy$variable))
results
results %>%
select(star_rank:gender)
results_tidy <-  results %>%
select(star_rank:gender)) %>%
gather(key = variable, value = value
, -c(country_of_origin:gender))
results_tidy <-  results %>%
select(star_rank:gender))
results %>%
select(star_rank:gender) %>%
gather(key = variable, value = value
, -c(country_of_origin:gender))
results %>%
select(star_rank:gender) %>%
gather(key = variable, value = value
, -c(country_of_origin:gender)) %>%
filter(variable != "star_rank")
results_tidy <-  results %>%
select(star_rank:gender) %>%
gather(key = food_name, value = score
, -c(country_of_origin:gender)) %>%
filter(food_name != "star_rank")
results_tidy
head(results_tidy)
food_rank <-  results %>%
select(star_rank:gender) %>%
gather(key = food_name, value = score
, -c(country_of_origin:gender)) %>%
filter(food_name != "star_rank")
food_rank
head(food_rank)
results_tidy
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city))
# save the tid(ier) data ------------------------------------------------------
saveRDS(results_tidy, file = "data/results_tidy.RDS")
# save the tid(ier) data ------------------------------------------------------
saveRDS(results_tidy, file = "data/results_tidy.rda")
# load clean data for modeling
load('data/TRAIN.rda')
# plot food rankings -------------------------------------------------
# create a specific data frame
load("data/results_tidy.rda")
# plot food rankings -------------------------------------------------
# create a specific data frame
rm(results_tidy)
load("data/results_tidy.rda")
# save the tid(ier) data ------------------------------------------------------
save(results_tidy, file = "data/results_tidy.rda")
results_tidy <- results %>%
separate(col = packages, into = paste0("package_",1:results$num_packages), sep = ";") %>% # package names as columns
separate(col = models, into = paste0("model_",1:results$num_models), sep = ";") %>% # model names as columns
separate(col = ds_skill_desc, into = paste0("ds_skill_",1:results$num_skills), sep = ";") %>%  # ds description as column
separate(col = ds_topics, into = paste0("ds_topic_",1:results$num_topics), sep = ";") %>%  # ds topic as column
separate(col = r_skill_desc, into = paste0("r_skill_",1:results$num_r_skill), sep = ";")  %>% # r skills as column
# select(-c(start_time:name,r_skill, ds_skill, num_models:num_topics, num_ds_skill, num_r_skill)) %>%
gather(key = variable, value = value, -c(start_date_at_slalom, start_date_at_zendesk, hometown, favorite_us_city, favorite_non_us_city))
# save the tid(ier) data ------------------------------------------------------
save(results_tidy, file = "data/results_tidy.rda")
# plot food rankings -------------------------------------------------
# create a specific data frame
rm(results_tidy)
load("data/results_tidy.rda")
save(results, file = "data/results_renamed.rds")
# plot food rankings -------------------------------------------------
# create a specific data frame
rm(results)
load("data/results_renamed.rds.rda")
save(results, file = "data/results_renamed.rds")
load("data/results_renamed.rda")
load("data/results_renamed.rds")
head(results)
# plot food rankings -------------------------------------------------
# create a specific data frame
rm(results)
load("data/results_renamed.rda")
# Aesthetics
qplot(displ, hwy, data = mpg, color = class)
equal_dim <- diamonds$x == diamonds$y
equal_dim
